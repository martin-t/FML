[
    &[0xf7, 0xf8], // idiv eax
    &[0xf7, 0xe8], // imul eax
    &[0xf7, 0xf9], // idiv ecx
    &[0xf7, 0xe9], // imul ecx
    &[0xf7, 0xfa], // idiv edx
    &[0xf7, 0xea], // imul edx
    &[0xf7, 0xfb], // idiv ebx
    &[0xf7, 0xeb], // imul ebx
    &[0xf7, 0xfc], // idiv esp
    &[0xf7, 0xec], // imul esp
    &[0xf7, 0xfd], // idiv ebp
    &[0xf7, 0xed], // imul ebp
    &[0xf7, 0xfe], // idiv esi
    &[0xf7, 0xee], // imul esi
    &[0xf7, 0xff], // idiv edi
    &[0xf7, 0xef], // imul edi
    &[0x41, 0xf7, 0xf8], // idiv r8d
    &[0x41, 0xf7, 0xe8], // imul r8d
    &[0x41, 0xf7, 0xf9], // idiv r9d
    &[0x41, 0xf7, 0xe9], // imul r9d
    &[0x41, 0xf7, 0xfa], // idiv r10d
    &[0x41, 0xf7, 0xea], // imul r10d
    &[0x41, 0xf7, 0xfb], // idiv r11d
    &[0x41, 0xf7, 0xeb], // imul r11d
    &[0x41, 0xf7, 0xfc], // idiv r12d
    &[0x41, 0xf7, 0xec], // imul r12d
    &[0x41, 0xf7, 0xfd], // idiv r13d
    &[0x41, 0xf7, 0xed], // imul r13d
    &[0x41, 0xf7, 0xfe], // idiv r14d
    &[0x41, 0xf7, 0xee], // imul r14d
    &[0x41, 0xf7, 0xff], // idiv r15d
    &[0x41, 0xf7, 0xef], // imul r15d
    &[0x48, 0xf7, 0xf8], // idiv rax
    &[0x48, 0xf7, 0xe8], // imul rax
    &[0x48, 0xf7, 0xf9], // idiv rcx
    &[0x48, 0xf7, 0xe9], // imul rcx
    &[0x48, 0xf7, 0xfa], // idiv rdx
    &[0x48, 0xf7, 0xea], // imul rdx
    &[0x48, 0xf7, 0xfb], // idiv rbx
    &[0x48, 0xf7, 0xeb], // imul rbx
    &[0x48, 0xf7, 0xfc], // idiv rsp
    &[0x48, 0xf7, 0xec], // imul rsp
    &[0x48, 0xf7, 0xfd], // idiv rbp
    &[0x48, 0xf7, 0xed], // imul rbp
    &[0x48, 0xf7, 0xfe], // idiv rsi
    &[0x48, 0xf7, 0xee], // imul rsi
    &[0x48, 0xf7, 0xff], // idiv rdi
    &[0x48, 0xf7, 0xef], // imul rdi
    &[0x49, 0xf7, 0xf8], // idiv r8
    &[0x49, 0xf7, 0xe8], // imul r8
    &[0x49, 0xf7, 0xf9], // idiv r9
    &[0x49, 0xf7, 0xe9], // imul r9
    &[0x49, 0xf7, 0xfa], // idiv r10
    &[0x49, 0xf7, 0xea], // imul r10
    &[0x49, 0xf7, 0xfb], // idiv r11
    &[0x49, 0xf7, 0xeb], // imul r11
    &[0x49, 0xf7, 0xfc], // idiv r12
    &[0x49, 0xf7, 0xec], // imul r12
    &[0x49, 0xf7, 0xfd], // idiv r13
    &[0x49, 0xf7, 0xed], // imul r13
    &[0x49, 0xf7, 0xfe], // idiv r14
    &[0x49, 0xf7, 0xee], // imul r14
    &[0x49, 0xf7, 0xff], // idiv r15
    &[0x49, 0xf7, 0xef], // imul r15
    &[0xf7, 0x3c, 0x05, 0x00, 0x00, 0x00, 0x00], // idiv dword [rax * 1]
    &[0xf7, 0x2c, 0x05, 0x00, 0x00, 0x00, 0x00], // imul dword [rax * 1]
    &[0xf7, 0x3c, 0x05, 0x80, 0xff, 0xff, 0xff], // idiv dword [rax * 1 + 0xffffff80]
    &[0xf7, 0x2c, 0x05, 0x80, 0xff, 0xff, 0xff], // imul dword [rax * 1 + 0xffffff80]
    &[0xf7, 0x3c, 0x05, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax * 1 + 0x80000000]
    &[0xf7, 0x2c, 0x05, 0x00, 0x00, 0x00, 0x80], // imul dword [rax * 1 + 0x80000000]
    &[0xf7, 0x3c, 0xc5, 0x00, 0x00, 0x00, 0x00], // idiv dword [rax * 8]
    &[0xf7, 0x2c, 0xc5, 0x00, 0x00, 0x00, 0x00], // imul dword [rax * 8]
    &[0xf7, 0x3c, 0xc5, 0x80, 0xff, 0xff, 0xff], // idiv dword [rax * 8 + 0xffffff80]
    &[0xf7, 0x2c, 0xc5, 0x80, 0xff, 0xff, 0xff], // imul dword [rax * 8 + 0xffffff80]
    &[0xf7, 0x3c, 0xc5, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax * 8 + 0x80000000]
    &[0xf7, 0x2c, 0xc5, 0x00, 0x00, 0x00, 0x80], // imul dword [rax * 8 + 0x80000000]
    &[0xf7, 0x3c, 0x3d, 0x00, 0x00, 0x00, 0x00], // idiv dword [rdi * 1]
    &[0xf7, 0x2c, 0x3d, 0x00, 0x00, 0x00, 0x00], // imul dword [rdi * 1]
    &[0xf7, 0x3c, 0x3d, 0x80, 0xff, 0xff, 0xff], // idiv dword [rdi * 1 + 0xffffff80]
    &[0xf7, 0x2c, 0x3d, 0x80, 0xff, 0xff, 0xff], // imul dword [rdi * 1 + 0xffffff80]
    &[0xf7, 0x3c, 0x3d, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi * 1 + 0x80000000]
    &[0xf7, 0x2c, 0x3d, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi * 1 + 0x80000000]
    &[0xf7, 0x3c, 0xfd, 0x00, 0x00, 0x00, 0x00], // idiv dword [rdi * 8]
    &[0xf7, 0x2c, 0xfd, 0x00, 0x00, 0x00, 0x00], // imul dword [rdi * 8]
    &[0xf7, 0x3c, 0xfd, 0x80, 0xff, 0xff, 0xff], // idiv dword [rdi * 8 + 0xffffff80]
    &[0xf7, 0x2c, 0xfd, 0x80, 0xff, 0xff, 0xff], // imul dword [rdi * 8 + 0xffffff80]
    &[0xf7, 0x3c, 0xfd, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi * 8 + 0x80000000]
    &[0xf7, 0x2c, 0xfd, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi * 8 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0x05, 0x00, 0x00, 0x00, 0x00], // idiv dword [r8 * 1]
    &[0x42, 0xf7, 0x2c, 0x05, 0x00, 0x00, 0x00, 0x00], // imul dword [r8 * 1]
    &[0x42, 0xf7, 0x3c, 0x05, 0x80, 0xff, 0xff, 0xff], // idiv dword [r8 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x2c, 0x05, 0x80, 0xff, 0xff, 0xff], // imul dword [r8 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x3c, 0x05, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x2c, 0x05, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0xc5, 0x00, 0x00, 0x00, 0x00], // idiv dword [r8 * 8]
    &[0x42, 0xf7, 0x2c, 0xc5, 0x00, 0x00, 0x00, 0x00], // imul dword [r8 * 8]
    &[0x42, 0xf7, 0x3c, 0xc5, 0x80, 0xff, 0xff, 0xff], // idiv dword [r8 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x2c, 0xc5, 0x80, 0xff, 0xff, 0xff], // imul dword [r8 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x3c, 0xc5, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 * 8 + 0x80000000]
    &[0x42, 0xf7, 0x2c, 0xc5, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 * 8 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0x3d, 0x00, 0x00, 0x00, 0x00], // idiv dword [r15 * 1]
    &[0x42, 0xf7, 0x2c, 0x3d, 0x00, 0x00, 0x00, 0x00], // imul dword [r15 * 1]
    &[0x42, 0xf7, 0x3c, 0x3d, 0x80, 0xff, 0xff, 0xff], // idiv dword [r15 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x2c, 0x3d, 0x80, 0xff, 0xff, 0xff], // imul dword [r15 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x3c, 0x3d, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x2c, 0x3d, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0xfd, 0x00, 0x00, 0x00, 0x00], // idiv dword [r15 * 8]
    &[0x42, 0xf7, 0x2c, 0xfd, 0x00, 0x00, 0x00, 0x00], // imul dword [r15 * 8]
    &[0x42, 0xf7, 0x3c, 0xfd, 0x80, 0xff, 0xff, 0xff], // idiv dword [r15 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x2c, 0xfd, 0x80, 0xff, 0xff, 0xff], // imul dword [r15 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x3c, 0xfd, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 * 8 + 0x80000000]
    &[0x42, 0xf7, 0x2c, 0xfd, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 * 8 + 0x80000000]
    &[0xf7, 0x38], // idiv dword [rax]
    &[0xf7, 0x28], // imul dword [rax]
    &[0xf7, 0x78, 0x80], // idiv dword [rax + 0xffffff80]
    &[0xf7, 0x68, 0x80], // imul dword [rax + 0xffffff80]
    &[0xf7, 0xb8, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + 0x80000000]
    &[0xf7, 0xa8, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + 0x80000000]
    &[0xf7, 0x38], // idiv dword [rax]
    &[0xf7, 0x28], // imul dword [rax]
    &[0xf7, 0x78, 0x80], // idiv dword [rax + 0xffffff80]
    &[0xf7, 0x68, 0x80], // imul dword [rax + 0xffffff80]
    &[0xf7, 0xb8, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + 0x80000000]
    &[0xf7, 0xa8, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + 0x80000000]
    &[0xf7, 0x3c, 0x00], // idiv dword [rax + rax * 1]
    &[0xf7, 0x2c, 0x00], // imul dword [rax + rax * 1]
    &[0xf7, 0x7c, 0x00, 0x80], // idiv dword [rax + rax * 1 + 0xffffff80]
    &[0xf7, 0x6c, 0x00, 0x80], // imul dword [rax + rax * 1 + 0xffffff80]
    &[0xf7, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + rax * 1 + 0x80000000]
    &[0xf7, 0xac, 0x00, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + rax * 1 + 0x80000000]
    &[0xf7, 0x3c, 0xc0], // idiv dword [rax + rax * 8]
    &[0xf7, 0x2c, 0xc0], // imul dword [rax + rax * 8]
    &[0xf7, 0x7c, 0xc0, 0x80], // idiv dword [rax + rax * 8 + 0xffffff80]
    &[0xf7, 0x6c, 0xc0, 0x80], // imul dword [rax + rax * 8 + 0xffffff80]
    &[0xf7, 0xbc, 0xc0, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + rax * 8 + 0x80000000]
    &[0xf7, 0xac, 0xc0, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + rax * 8 + 0x80000000]
    &[0xf7, 0x3c, 0x38], // idiv dword [rax + rdi * 1]
    &[0xf7, 0x2c, 0x38], // imul dword [rax + rdi * 1]
    &[0xf7, 0x7c, 0x38, 0x80], // idiv dword [rax + rdi * 1 + 0xffffff80]
    &[0xf7, 0x6c, 0x38, 0x80], // imul dword [rax + rdi * 1 + 0xffffff80]
    &[0xf7, 0xbc, 0x38, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + rdi * 1 + 0x80000000]
    &[0xf7, 0xac, 0x38, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + rdi * 1 + 0x80000000]
    &[0xf7, 0x3c, 0xf8], // idiv dword [rax + rdi * 8]
    &[0xf7, 0x2c, 0xf8], // imul dword [rax + rdi * 8]
    &[0xf7, 0x7c, 0xf8, 0x80], // idiv dword [rax + rdi * 8 + 0xffffff80]
    &[0xf7, 0x6c, 0xf8, 0x80], // imul dword [rax + rdi * 8 + 0xffffff80]
    &[0xf7, 0xbc, 0xf8, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + rdi * 8 + 0x80000000]
    &[0xf7, 0xac, 0xf8, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + rdi * 8 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0x00], // idiv dword [rax + r8 * 1]
    &[0x42, 0xf7, 0x2c, 0x00], // imul dword [rax + r8 * 1]
    &[0x42, 0xf7, 0x7c, 0x00, 0x80], // idiv dword [rax + r8 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0x00, 0x80], // imul dword [rax + r8 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + r8 * 1 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0x00, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + r8 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0xc0], // idiv dword [rax + r8 * 8]
    &[0x42, 0xf7, 0x2c, 0xc0], // imul dword [rax + r8 * 8]
    &[0x42, 0xf7, 0x7c, 0xc0, 0x80], // idiv dword [rax + r8 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0xc0, 0x80], // imul dword [rax + r8 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0xc0, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + r8 * 8 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0xc0, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + r8 * 8 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0x38], // idiv dword [rax + r15 * 1]
    &[0x42, 0xf7, 0x2c, 0x38], // imul dword [rax + r15 * 1]
    &[0x42, 0xf7, 0x7c, 0x38, 0x80], // idiv dword [rax + r15 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0x38, 0x80], // imul dword [rax + r15 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0x38, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + r15 * 1 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0x38, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + r15 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0xf8], // idiv dword [rax + r15 * 8]
    &[0x42, 0xf7, 0x2c, 0xf8], // imul dword [rax + r15 * 8]
    &[0x42, 0xf7, 0x7c, 0xf8, 0x80], // idiv dword [rax + r15 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0xf8, 0x80], // imul dword [rax + r15 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0xf8, 0x00, 0x00, 0x00, 0x80], // idiv dword [rax + r15 * 8 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0xf8, 0x00, 0x00, 0x00, 0x80], // imul dword [rax + r15 * 8 + 0x80000000]
    &[0xf7, 0x3f], // idiv dword [rdi]
    &[0xf7, 0x2f], // imul dword [rdi]
    &[0xf7, 0x7f, 0x80], // idiv dword [rdi + 0xffffff80]
    &[0xf7, 0x6f, 0x80], // imul dword [rdi + 0xffffff80]
    &[0xf7, 0xbf, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + 0x80000000]
    &[0xf7, 0xaf, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + 0x80000000]
    &[0xf7, 0x3f], // idiv dword [rdi]
    &[0xf7, 0x2f], // imul dword [rdi]
    &[0xf7, 0x7f, 0x80], // idiv dword [rdi + 0xffffff80]
    &[0xf7, 0x6f, 0x80], // imul dword [rdi + 0xffffff80]
    &[0xf7, 0xbf, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + 0x80000000]
    &[0xf7, 0xaf, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + 0x80000000]
    &[0xf7, 0x3c, 0x07], // idiv dword [rdi + rax * 1]
    &[0xf7, 0x2c, 0x07], // imul dword [rdi + rax * 1]
    &[0xf7, 0x7c, 0x07, 0x80], // idiv dword [rdi + rax * 1 + 0xffffff80]
    &[0xf7, 0x6c, 0x07, 0x80], // imul dword [rdi + rax * 1 + 0xffffff80]
    &[0xf7, 0xbc, 0x07, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + rax * 1 + 0x80000000]
    &[0xf7, 0xac, 0x07, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + rax * 1 + 0x80000000]
    &[0xf7, 0x3c, 0xc7], // idiv dword [rdi + rax * 8]
    &[0xf7, 0x2c, 0xc7], // imul dword [rdi + rax * 8]
    &[0xf7, 0x7c, 0xc7, 0x80], // idiv dword [rdi + rax * 8 + 0xffffff80]
    &[0xf7, 0x6c, 0xc7, 0x80], // imul dword [rdi + rax * 8 + 0xffffff80]
    &[0xf7, 0xbc, 0xc7, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + rax * 8 + 0x80000000]
    &[0xf7, 0xac, 0xc7, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + rax * 8 + 0x80000000]
    &[0xf7, 0x3c, 0x3f], // idiv dword [rdi + rdi * 1]
    &[0xf7, 0x2c, 0x3f], // imul dword [rdi + rdi * 1]
    &[0xf7, 0x7c, 0x3f, 0x80], // idiv dword [rdi + rdi * 1 + 0xffffff80]
    &[0xf7, 0x6c, 0x3f, 0x80], // imul dword [rdi + rdi * 1 + 0xffffff80]
    &[0xf7, 0xbc, 0x3f, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + rdi * 1 + 0x80000000]
    &[0xf7, 0xac, 0x3f, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + rdi * 1 + 0x80000000]
    &[0xf7, 0x3c, 0xff], // idiv dword [rdi + rdi * 8]
    &[0xf7, 0x2c, 0xff], // imul dword [rdi + rdi * 8]
    &[0xf7, 0x7c, 0xff, 0x80], // idiv dword [rdi + rdi * 8 + 0xffffff80]
    &[0xf7, 0x6c, 0xff, 0x80], // imul dword [rdi + rdi * 8 + 0xffffff80]
    &[0xf7, 0xbc, 0xff, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + rdi * 8 + 0x80000000]
    &[0xf7, 0xac, 0xff, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + rdi * 8 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0x07], // idiv dword [rdi + r8 * 1]
    &[0x42, 0xf7, 0x2c, 0x07], // imul dword [rdi + r8 * 1]
    &[0x42, 0xf7, 0x7c, 0x07, 0x80], // idiv dword [rdi + r8 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0x07, 0x80], // imul dword [rdi + r8 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0x07, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + r8 * 1 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0x07, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + r8 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0xc7], // idiv dword [rdi + r8 * 8]
    &[0x42, 0xf7, 0x2c, 0xc7], // imul dword [rdi + r8 * 8]
    &[0x42, 0xf7, 0x7c, 0xc7, 0x80], // idiv dword [rdi + r8 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0xc7, 0x80], // imul dword [rdi + r8 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0xc7, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + r8 * 8 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0xc7, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + r8 * 8 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0x3f], // idiv dword [rdi + r15 * 1]
    &[0x42, 0xf7, 0x2c, 0x3f], // imul dword [rdi + r15 * 1]
    &[0x42, 0xf7, 0x7c, 0x3f, 0x80], // idiv dword [rdi + r15 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0x3f, 0x80], // imul dword [rdi + r15 * 1 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0x3f, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + r15 * 1 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0x3f, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + r15 * 1 + 0x80000000]
    &[0x42, 0xf7, 0x3c, 0xff], // idiv dword [rdi + r15 * 8]
    &[0x42, 0xf7, 0x2c, 0xff], // imul dword [rdi + r15 * 8]
    &[0x42, 0xf7, 0x7c, 0xff, 0x80], // idiv dword [rdi + r15 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0x6c, 0xff, 0x80], // imul dword [rdi + r15 * 8 + 0xffffff80]
    &[0x42, 0xf7, 0xbc, 0xff, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdi + r15 * 8 + 0x80000000]
    &[0x42, 0xf7, 0xac, 0xff, 0x00, 0x00, 0x00, 0x80], // imul dword [rdi + r15 * 8 + 0x80000000]
    &[0x41, 0xf7, 0x38], // idiv dword [r8]
    &[0x41, 0xf7, 0x28], // imul dword [r8]
    &[0x41, 0xf7, 0x78, 0x80], // idiv dword [r8 + 0xffffff80]
    &[0x41, 0xf7, 0x68, 0x80], // imul dword [r8 + 0xffffff80]
    &[0x41, 0xf7, 0xb8, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + 0x80000000]
    &[0x41, 0xf7, 0xa8, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + 0x80000000]
    &[0x41, 0xf7, 0x38], // idiv dword [r8]
    &[0x41, 0xf7, 0x28], // imul dword [r8]
    &[0x41, 0xf7, 0x78, 0x80], // idiv dword [r8 + 0xffffff80]
    &[0x41, 0xf7, 0x68, 0x80], // imul dword [r8 + 0xffffff80]
    &[0x41, 0xf7, 0xb8, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + 0x80000000]
    &[0x41, 0xf7, 0xa8, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0x00], // idiv dword [r8 + rax * 1]
    &[0x41, 0xf7, 0x2c, 0x00], // imul dword [r8 + rax * 1]
    &[0x41, 0xf7, 0x7c, 0x00, 0x80], // idiv dword [r8 + rax * 1 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0x00, 0x80], // imul dword [r8 + rax * 1 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + rax * 1 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0x00, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + rax * 1 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0xc0], // idiv dword [r8 + rax * 8]
    &[0x41, 0xf7, 0x2c, 0xc0], // imul dword [r8 + rax * 8]
    &[0x41, 0xf7, 0x7c, 0xc0, 0x80], // idiv dword [r8 + rax * 8 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0xc0, 0x80], // imul dword [r8 + rax * 8 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0xc0, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + rax * 8 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0xc0, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + rax * 8 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0x38], // idiv dword [r8 + rdi * 1]
    &[0x41, 0xf7, 0x2c, 0x38], // imul dword [r8 + rdi * 1]
    &[0x41, 0xf7, 0x7c, 0x38, 0x80], // idiv dword [r8 + rdi * 1 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0x38, 0x80], // imul dword [r8 + rdi * 1 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0x38, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + rdi * 1 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0x38, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + rdi * 1 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0xf8], // idiv dword [r8 + rdi * 8]
    &[0x41, 0xf7, 0x2c, 0xf8], // imul dword [r8 + rdi * 8]
    &[0x41, 0xf7, 0x7c, 0xf8, 0x80], // idiv dword [r8 + rdi * 8 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0xf8, 0x80], // imul dword [r8 + rdi * 8 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0xf8, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + rdi * 8 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0xf8, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + rdi * 8 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0x00], // idiv dword [r8 + r8 * 1]
    &[0x43, 0xf7, 0x2c, 0x00], // imul dword [r8 + r8 * 1]
    &[0x43, 0xf7, 0x7c, 0x00, 0x80], // idiv dword [r8 + r8 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0x00, 0x80], // imul dword [r8 + r8 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + r8 * 1 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0x00, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + r8 * 1 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0xc0], // idiv dword [r8 + r8 * 8]
    &[0x43, 0xf7, 0x2c, 0xc0], // imul dword [r8 + r8 * 8]
    &[0x43, 0xf7, 0x7c, 0xc0, 0x80], // idiv dword [r8 + r8 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0xc0, 0x80], // imul dword [r8 + r8 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0xc0, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + r8 * 8 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0xc0, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + r8 * 8 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0x38], // idiv dword [r8 + r15 * 1]
    &[0x43, 0xf7, 0x2c, 0x38], // imul dword [r8 + r15 * 1]
    &[0x43, 0xf7, 0x7c, 0x38, 0x80], // idiv dword [r8 + r15 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0x38, 0x80], // imul dword [r8 + r15 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0x38, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + r15 * 1 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0x38, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + r15 * 1 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0xf8], // idiv dword [r8 + r15 * 8]
    &[0x43, 0xf7, 0x2c, 0xf8], // imul dword [r8 + r15 * 8]
    &[0x43, 0xf7, 0x7c, 0xf8, 0x80], // idiv dword [r8 + r15 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0xf8, 0x80], // imul dword [r8 + r15 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0xf8, 0x00, 0x00, 0x00, 0x80], // idiv dword [r8 + r15 * 8 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0xf8, 0x00, 0x00, 0x00, 0x80], // imul dword [r8 + r15 * 8 + 0x80000000]
    &[0x41, 0xf7, 0x3f], // idiv dword [r15]
    &[0x41, 0xf7, 0x2f], // imul dword [r15]
    &[0x41, 0xf7, 0x7f, 0x80], // idiv dword [r15 + 0xffffff80]
    &[0x41, 0xf7, 0x6f, 0x80], // imul dword [r15 + 0xffffff80]
    &[0x41, 0xf7, 0xbf, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + 0x80000000]
    &[0x41, 0xf7, 0xaf, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + 0x80000000]
    &[0x41, 0xf7, 0x3f], // idiv dword [r15]
    &[0x41, 0xf7, 0x2f], // imul dword [r15]
    &[0x41, 0xf7, 0x7f, 0x80], // idiv dword [r15 + 0xffffff80]
    &[0x41, 0xf7, 0x6f, 0x80], // imul dword [r15 + 0xffffff80]
    &[0x41, 0xf7, 0xbf, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + 0x80000000]
    &[0x41, 0xf7, 0xaf, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0x07], // idiv dword [r15 + rax * 1]
    &[0x41, 0xf7, 0x2c, 0x07], // imul dword [r15 + rax * 1]
    &[0x41, 0xf7, 0x7c, 0x07, 0x80], // idiv dword [r15 + rax * 1 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0x07, 0x80], // imul dword [r15 + rax * 1 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0x07, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + rax * 1 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0x07, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + rax * 1 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0xc7], // idiv dword [r15 + rax * 8]
    &[0x41, 0xf7, 0x2c, 0xc7], // imul dword [r15 + rax * 8]
    &[0x41, 0xf7, 0x7c, 0xc7, 0x80], // idiv dword [r15 + rax * 8 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0xc7, 0x80], // imul dword [r15 + rax * 8 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0xc7, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + rax * 8 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0xc7, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + rax * 8 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0x3f], // idiv dword [r15 + rdi * 1]
    &[0x41, 0xf7, 0x2c, 0x3f], // imul dword [r15 + rdi * 1]
    &[0x41, 0xf7, 0x7c, 0x3f, 0x80], // idiv dword [r15 + rdi * 1 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0x3f, 0x80], // imul dword [r15 + rdi * 1 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0x3f, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + rdi * 1 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0x3f, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + rdi * 1 + 0x80000000]
    &[0x41, 0xf7, 0x3c, 0xff], // idiv dword [r15 + rdi * 8]
    &[0x41, 0xf7, 0x2c, 0xff], // imul dword [r15 + rdi * 8]
    &[0x41, 0xf7, 0x7c, 0xff, 0x80], // idiv dword [r15 + rdi * 8 + 0xffffff80]
    &[0x41, 0xf7, 0x6c, 0xff, 0x80], // imul dword [r15 + rdi * 8 + 0xffffff80]
    &[0x41, 0xf7, 0xbc, 0xff, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + rdi * 8 + 0x80000000]
    &[0x41, 0xf7, 0xac, 0xff, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + rdi * 8 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0x07], // idiv dword [r15 + r8 * 1]
    &[0x43, 0xf7, 0x2c, 0x07], // imul dword [r15 + r8 * 1]
    &[0x43, 0xf7, 0x7c, 0x07, 0x80], // idiv dword [r15 + r8 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0x07, 0x80], // imul dword [r15 + r8 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0x07, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + r8 * 1 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0x07, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + r8 * 1 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0xc7], // idiv dword [r15 + r8 * 8]
    &[0x43, 0xf7, 0x2c, 0xc7], // imul dword [r15 + r8 * 8]
    &[0x43, 0xf7, 0x7c, 0xc7, 0x80], // idiv dword [r15 + r8 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0xc7, 0x80], // imul dword [r15 + r8 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0xc7, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + r8 * 8 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0xc7, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + r8 * 8 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0x3f], // idiv dword [r15 + r15 * 1]
    &[0x43, 0xf7, 0x2c, 0x3f], // imul dword [r15 + r15 * 1]
    &[0x43, 0xf7, 0x7c, 0x3f, 0x80], // idiv dword [r15 + r15 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0x3f, 0x80], // imul dword [r15 + r15 * 1 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0x3f, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + r15 * 1 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0x3f, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + r15 * 1 + 0x80000000]
    &[0x43, 0xf7, 0x3c, 0xff], // idiv dword [r15 + r15 * 8]
    &[0x43, 0xf7, 0x2c, 0xff], // imul dword [r15 + r15 * 8]
    &[0x43, 0xf7, 0x7c, 0xff, 0x80], // idiv dword [r15 + r15 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0x6c, 0xff, 0x80], // imul dword [r15 + r15 * 8 + 0xffffff80]
    &[0x43, 0xf7, 0xbc, 0xff, 0x00, 0x00, 0x00, 0x80], // idiv dword [r15 + r15 * 8 + 0x80000000]
    &[0x43, 0xf7, 0xac, 0xff, 0x00, 0x00, 0x00, 0x80], // imul dword [r15 + r15 * 8 + 0x80000000]
    &[0xf7, 0x3c, 0x4d, 0x2a, 0x00, 0x00, 0x00], // idiv dword [rcx * 2 + 0x2a]
    &[0xf7, 0x2c, 0x4d, 0x2a, 0x00, 0x00, 0x00], // imul dword [rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x48, 0x2a], // idiv dword [rax + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x48, 0x2a], // imul dword [rax + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x49, 0x2a], // idiv dword [rcx + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x49, 0x2a], // imul dword [rcx + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x4a, 0x2a], // idiv dword [rdx + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x4a, 0x2a], // imul dword [rdx + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x4b, 0x2a], // idiv dword [rbx + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x4b, 0x2a], // imul dword [rbx + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x4d, 0x2a], // idiv dword [rbp + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x4d, 0x2a], // imul dword [rbp + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x4e, 0x2a], // idiv dword [rsi + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x4e, 0x2a], // imul dword [rsi + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x4f, 0x2a], // idiv dword [rdi + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x4f, 0x2a], // imul dword [rdi + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x7c, 0x48, 0x2a], // idiv dword [r8 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x6c, 0x48, 0x2a], // imul dword [r8 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x7c, 0x49, 0x2a], // idiv dword [r9 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x6c, 0x49, 0x2a], // imul dword [r9 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x7c, 0x4a, 0x2a], // idiv dword [r10 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x6c, 0x4a, 0x2a], // imul dword [r10 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x7c, 0x4b, 0x2a], // idiv dword [r11 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x6c, 0x4b, 0x2a], // imul dword [r11 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x7c, 0x4d, 0x2a], // idiv dword [r13 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x6c, 0x4d, 0x2a], // imul dword [r13 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x7c, 0x4e, 0x2a], // idiv dword [r14 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x6c, 0x4e, 0x2a], // imul dword [r14 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x7c, 0x4f, 0x2a], // idiv dword [r15 + rcx * 2 + 0x2a]
    &[0x41, 0xf7, 0x6c, 0x4f, 0x2a], // imul dword [r15 + rcx * 2 + 0x2a]
    &[0xf7, 0x7a, 0x2a], // idiv dword [rdx + 0x2a]
    &[0xf7, 0x6a, 0x2a], // imul dword [rdx + 0x2a]
    &[0xf7, 0x7c, 0x42, 0x2a], // idiv dword [rdx + rax * 2 + 0x2a]
    &[0xf7, 0x6c, 0x42, 0x2a], // imul dword [rdx + rax * 2 + 0x2a]
    &[0xf7, 0x7c, 0x4a, 0x2a], // idiv dword [rdx + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x4a, 0x2a], // imul dword [rdx + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x52, 0x2a], // idiv dword [rdx + rdx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x52, 0x2a], // imul dword [rdx + rdx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x5a, 0x2a], // idiv dword [rdx + rbx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x5a, 0x2a], // imul dword [rdx + rbx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x6a, 0x2a], // idiv dword [rdx + rbp * 2 + 0x2a]
    &[0xf7, 0x6c, 0x6a, 0x2a], // imul dword [rdx + rbp * 2 + 0x2a]
    &[0xf7, 0x7c, 0x72, 0x2a], // idiv dword [rdx + rsi * 2 + 0x2a]
    &[0xf7, 0x6c, 0x72, 0x2a], // imul dword [rdx + rsi * 2 + 0x2a]
    &[0xf7, 0x7c, 0x7a, 0x2a], // idiv dword [rdx + rdi * 2 + 0x2a]
    &[0xf7, 0x6c, 0x7a, 0x2a], // imul dword [rdx + rdi * 2 + 0x2a]
    &[0x42, 0xf7, 0x7c, 0x42, 0x2a], // idiv dword [rdx + r8 * 2 + 0x2a]
    &[0x42, 0xf7, 0x6c, 0x42, 0x2a], // imul dword [rdx + r8 * 2 + 0x2a]
    &[0x42, 0xf7, 0x7c, 0x4a, 0x2a], // idiv dword [rdx + r9 * 2 + 0x2a]
    &[0x42, 0xf7, 0x6c, 0x4a, 0x2a], // imul dword [rdx + r9 * 2 + 0x2a]
    &[0x42, 0xf7, 0x7c, 0x52, 0x2a], // idiv dword [rdx + r10 * 2 + 0x2a]
    &[0x42, 0xf7, 0x6c, 0x52, 0x2a], // imul dword [rdx + r10 * 2 + 0x2a]
    &[0x42, 0xf7, 0x7c, 0x5a, 0x2a], // idiv dword [rdx + r11 * 2 + 0x2a]
    &[0x42, 0xf7, 0x6c, 0x5a, 0x2a], // imul dword [rdx + r11 * 2 + 0x2a]
    &[0x42, 0xf7, 0x7c, 0x6a, 0x2a], // idiv dword [rdx + r13 * 2 + 0x2a]
    &[0x42, 0xf7, 0x6c, 0x6a, 0x2a], // imul dword [rdx + r13 * 2 + 0x2a]
    &[0x42, 0xf7, 0x7c, 0x72, 0x2a], // idiv dword [rdx + r14 * 2 + 0x2a]
    &[0x42, 0xf7, 0x6c, 0x72, 0x2a], // imul dword [rdx + r14 * 2 + 0x2a]
    &[0x42, 0xf7, 0x7c, 0x7a, 0x2a], // idiv dword [rdx + r15 * 2 + 0x2a]
    &[0x42, 0xf7, 0x6c, 0x7a, 0x2a], // imul dword [rdx + r15 * 2 + 0x2a]
    &[0xf7, 0x7c, 0x0a, 0x2a], // idiv dword [rdx + rcx * 1 + 0x2a]
    &[0xf7, 0x6c, 0x0a, 0x2a], // imul dword [rdx + rcx * 1 + 0x2a]
    &[0xf7, 0x7c, 0x4a, 0x2a], // idiv dword [rdx + rcx * 2 + 0x2a]
    &[0xf7, 0x6c, 0x4a, 0x2a], // imul dword [rdx + rcx * 2 + 0x2a]
    &[0xf7, 0x7c, 0x8a, 0x2a], // idiv dword [rdx + rcx * 4 + 0x2a]
    &[0xf7, 0x6c, 0x8a, 0x2a], // imul dword [rdx + rcx * 4 + 0x2a]
    &[0xf7, 0x7c, 0xca, 0x2a], // idiv dword [rdx + rcx * 8 + 0x2a]
    &[0xf7, 0x6c, 0xca, 0x2a], // imul dword [rdx + rcx * 8 + 0x2a]
    &[0xf7, 0x3c, 0x4a], // idiv dword [rdx + rcx * 2]
    &[0xf7, 0x2c, 0x4a], // imul dword [rdx + rcx * 2]
    &[0xf7, 0x7c, 0x4a, 0x01], // idiv dword [rdx + rcx * 2 + 0x1]
    &[0xf7, 0x6c, 0x4a, 0x01], // imul dword [rdx + rcx * 2 + 0x1]
    &[0xf7, 0x7c, 0x4a, 0xff], // idiv dword [rdx + rcx * 2 + 0xffffffff]
    &[0xf7, 0x6c, 0x4a, 0xff], // imul dword [rdx + rcx * 2 + 0xffffffff]
    &[0xf7, 0x7c, 0x4a, 0x7f], // idiv dword [rdx + rcx * 2 + 0x7f]
    &[0xf7, 0x6c, 0x4a, 0x7f], // imul dword [rdx + rcx * 2 + 0x7f]
    &[0xf7, 0x7c, 0x4a, 0x80], // idiv dword [rdx + rcx * 2 + 0xffffff80]
    &[0xf7, 0x6c, 0x4a, 0x80], // imul dword [rdx + rcx * 2 + 0xffffff80]
    &[0xf7, 0xbc, 0x4a, 0x80, 0x00, 0x00, 0x00], // idiv dword [rdx + rcx * 2 + 0x80]
    &[0xf7, 0xac, 0x4a, 0x80, 0x00, 0x00, 0x00], // imul dword [rdx + rcx * 2 + 0x80]
    &[0xf7, 0xbc, 0x4a, 0x7f, 0xff, 0xff, 0xff], // idiv dword [rdx + rcx * 2 + 0xffffff7f]
    &[0xf7, 0xac, 0x4a, 0x7f, 0xff, 0xff, 0xff], // imul dword [rdx + rcx * 2 + 0xffffff7f]
    &[0xf7, 0xbc, 0x4a, 0xff, 0xff, 0xff, 0x7f], // idiv dword [rdx + rcx * 2 + 0x7fffffff]
    &[0xf7, 0xac, 0x4a, 0xff, 0xff, 0xff, 0x7f], // imul dword [rdx + rcx * 2 + 0x7fffffff]
    &[0xf7, 0xbc, 0x4a, 0x00, 0x00, 0x00, 0x80], // idiv dword [rdx + rcx * 2 + 0x80000000]
    &[0xf7, 0xac, 0x4a, 0x00, 0x00, 0x00, 0x80], // imul dword [rdx + rcx * 2 + 0x80000000]
]
